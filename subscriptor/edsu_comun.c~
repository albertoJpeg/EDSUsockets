/*
   Incluya en este fichero todas las implementaciones que pueden
   necesitar compartir los mÃ³dulos editor y subscriptor,
   si es que las hubiera.
*/

#include "edsu_comun.h"

int obtener_entorno(ENV *ent)
{
  if((ent->SERVIDOR = getenv("SERVIDOR"))==NULL)
    {
      fprintf(stderr,"Error: Variable de entorno SERVIDOR no definida\n");
      return -1;
    }

  if((ent->PUERTO = getenv("PUERTO"))==NULL)
    {
      fprintf(stderr,"Error: Variable de entorno PUERTO no definida\n");
      return -1;
    }
}

int conectar(ENT *ent)
{
  int sckt, port;
  port = atoi(ent->PUERTO);
  struct hostent *netdb;
  SOCKADDR_IN serv_addr;
  size_t addr_sz_s = sizeof(SOCKADDR_IN);
  socklen_t addr_sz_sc = sizeof(SOCKADDR_IN);

  netdb = gethostbyname(ent->SERVIDOR);

  bzero((char*)&serv_addr, addr_sz_s);

  serv_addr.sin_family = AF_INET;
  memcpy(&(serv_addr.sin_addr), netdb->h_addr, netdb->h_length);
  serv_addr.sin_port = htons(port);

  if((sckt=socket(AF_INET, SOCK_STREAM, IPPROTO_TCP))==-1)
    {
      perror("Error");
      return -1;
    }

  if(connect(sckt, (SOCKADDR*)&serv_addr, addr_sz_sc)==-1)
    {
      perror("Error");
      return -1;
    }
  
  return sckt;
}
